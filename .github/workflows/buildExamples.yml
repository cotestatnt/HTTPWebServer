name: Compile UNO R4 WiFi Examples

on:
  push:
    paths:
      - ".github/workflows/buildExamples.yml"
      - "examples/**"
      - "src/**"
      - "library.json"
      - "library.properties"
  pull_request:
    paths:
      - ".github/workflows/buildExamples.yml"
      - "examples/**"
      - "src/**"
      - "library.json"
      - "library.properties"
  workflow_dispatch:
  repository_dispatch:

jobs:
  build:
    name: UNO R4 WiFi
    runs-on: ubuntu-latest

    env:
      SKETCHES_REPORTS_PATH: sketches-reports
      LIBRARY_NAME: HTTPWebServer
      EXCLUDE_EXAMPLES: "SAMD_WiFiManager.ino"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install arduino-cli
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=/usr/local/bin sh
          arduino-cli version

      - name: Setup Arduino CLI
        run: |
          arduino-cli config init
          arduino-cli core update-index

      - name: Install UNO R4 platform
        run: arduino-cli core install arduino:renesas_uno

      - name: Install required libraries
        run: |
          arduino-cli lib install Ethernet
          arduino-cli lib install --git-url https://github.com/cotestatnt/HTTPWebServer.git

      - name: Find relevant examples
        id: find-examples
        run: |
          EXCLUDED=$(echo "$EXCLUDE_EXAMPLES" | tr ' ' '|')
          EXAMPLES=$(find examples -name "*.ino" | grep -vE "$EXCLUDED" || echo "")
          echo "examples_list<<EOF" >> $GITHUB_OUTPUT
          echo "$EXAMPLES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "ðŸ“‹ Examples to compile:"
          echo "$EXAMPLES"

      - name: Compile selected examples
        if: steps.find-examples.outputs.examples_list != ''
        run: |
          for sketch in ${{ steps.find-examples.outputs.examples_list }}; do
            echo "ðŸ”¨ Compiling $sketch"
            arduino-cli compile --fqbn arduino:renesas_uno:unor4wifi $sketch
          done

      - name: Create compilation report
        if: always()
        run: |
          mkdir -p ${{ env.SKETCHES_REPORTS_PATH }}
          date > ${{ env.SKETCHES_REPORTS_PATH }}/report.txt
          echo "Compiled examples:" >> ${{ env.SKETCHES_REPORTS_PATH }}/report.txt
          echo "${{ steps.find-examples.outputs.examples_list }}" >> ${{ env.SKETCHES_REPORTS_PATH }}/report.txt

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compilation-report
          path: ${{ env.SKETCHES_REPORTS_PATH }}
          retention-days: 5
